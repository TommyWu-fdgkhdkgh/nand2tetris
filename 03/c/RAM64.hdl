// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address[0..2], a=DMux8Waya, b=DMux8Wayb, c=DMux8Wayc, d=DMux8Wayd, e=DMux8Waye, f=DMux8Wayf, g=DMux8Wayg, h=DMux8Wayh);
	RAM8(in=in, load=DMux8Waya, address=address[3..5], out=a);
	RAM8(in=in, load=DMux8Wayb, address=address[3..5], out=b);
	RAM8(in=in, load=DMux8Wayc, address=address[3..5], out=c);
	RAM8(in=in, load=DMux8Wayd, address=address[3..5], out=d);
	RAM8(in=in, load=DMux8Waye, address=address[3..5], out=e);
	RAM8(in=in, load=DMux8Wayf, address=address[3..5], out=f);
	RAM8(in=in, load=DMux8Wayg, address=address[3..5], out=g);
	RAM8(in=in, load=DMux8Wayh, address=address[3..5], out=h);
	Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address[0..2], out=out);
}